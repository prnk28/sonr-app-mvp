name: CI Flutter Workflow

on:
  push:
    tags:
      - v*
  repository_dispatch:
    types: [build-app]
  workflow_dispatch:

jobs:
  # Android Flutter Build
  deploy-android:
    runs-on: ubuntu-latest
    env:
        BUILD_PATH: ${{ github.workspace }}/dist
        FLUTTER_PATH: /opt/hostedtoolcache/flutter
    steps:
      # 1. Checkout
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.PAT_GITHUB_TOKEN }}

      # 3. Setup Java
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # 4. Cache Flutter
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: $FLUTTER_PATH
          key: ${{ runner.os }}-flutter

      # 5. Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'beta'

      # 8. Cache Build
      - name: Cache Android Build
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/build
          key: ${{ runner.os }}-android-build

      # 10. Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
          bundler-cache: true
          working-directory: android

      # 6. Fetch Packages and Generate Env Variables
      - name: Fetch Packages and Generate Env
        run: |
            cd ${{ github.workspace }} && touch .env
            echo IP_KEY=${{ secrets.IP_KEY }} >> .env
            echo RAPID_KEY=${{ secrets.RAPID_KEY }} >> .env
            echo HS_KEY=${{ secrets.HS_KEY }} >> .env
            echo HS_SECRET=${{ secrets.HS_SECRET }} >> .env
            echo HUB_KEY=${{ secrets.HUB_KEY }} >> .env
            echo HUB_SECRET=${{ secrets.HUB_SECRET }} >> .env
            echo INTERCOM_APP_ID=${{ secrets.INTERCOM_APP_ID }} >> .env
            echo INTERCOM_IOS_KEY=${{ secrets.INTERCOM_IOS_KEY }} >> .env
            echo INTERCOM_ANDROID_KEY=${{ secrets.INTERCOM_ANDROID_KEY }} >> .env
            cat .env

      # 9. Deploy Android App
      - name: Deploy Android AAB
        run: ${{ github.workspace }}/.github/scripts/deploy-android.sh
        timeout-minutes: 60
        env:
          APP_VERSION: ${{ github.event.client_payload.version }}
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_PLAYSTORE_CONFIG: ${{ secrets.ANDROID_PLAYSTORE_CONFIG }}
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

  # iOS Flutter Build
  deploy-ios:
    runs-on: macos-latest
    env:
        FLUTTER_PATH: /Users/runner/hostedtoolcache/flutter
    steps:
      # 1. Checkout
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.PAT_GITHUB_TOKEN }}

      # 3. Setup Java
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # 4. Cache Flutter
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: $FLUTTER_PATH
          key: ${{ runner.os }}-flutter

      # 5. Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'beta'

      # 8. Cache Build
      - name: Cache iOS Build
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/build
          key: ${{ runner.os }}-ios-build

      # 10. Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
          bundler-cache: true
          working-directory: ios

      # 11. Install SSH Key
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.FASTLANE_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}


      # 7.  Generate Env Variables
      - name: Generate Client Env
        run: |
            cd ${{ github.workspace }} && touch .env
            echo IP_KEY=${{ secrets.IP_KEY }} >> .env
            echo RAPID_KEY=${{ secrets.RAPID_KEY }} >> .env
            echo HS_KEY=${{ secrets.HS_KEY }} >> .env
            echo HS_SECRET=${{ secrets.HS_SECRET }} >> .env
            echo HUB_KEY=${{ secrets.HUB_KEY }} >> .env
            echo HUB_SECRET=${{ secrets.HUB_SECRET }} >> .env
            echo INTERCOM_APP_ID=${{ secrets.INTERCOM_APP_ID }} >> .env
            echo INTERCOM_IOS_KEY=${{ secrets.INTERCOM_IOS_KEY }} >> .env
            echo INTERCOM_ANDROID_KEY=${{ secrets.INTERCOM_ANDROID_KEY }} >> .env
            cat .env

      # 13. Send Fastlane
      - name: Deploy iOS App
        run: ${{ github.workspace }}/.github/scripts/deploy-ios.sh
        timeout-minutes: 60
        env:
          APP_VERSION: ${{ github.event.client_payload.version }}
          GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
