name: CI Flutter Workflow

on:
  push:
    tags:
      - v*
  repository_dispatch:
    types: [build-app]
  workflow_dispatch:

jobs:
  # Android Flutter Build
  deploy-android:
    runs-on: ubuntu-latest
    env:
        BUILD_PATH: ${{ github.workspace }}/dist
        FLUTTER_PATH: /opt/hostedtoolcache/flutter
    steps:
      # 1. Checkout
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.PAT_GITHUB_TOKEN }}

      # 2. Install Latest Android Binary
      - name: Install Latest Android Binary
        run: |
            echo "Installing latest Android binary..."
            gh release download --repo 'sonr-io/core' --pattern *_android.zip --dir ${{ github.workspace }}/plugin/android/libs
            unzip ${{ github.workspace }}/plugin/android/libs/*_android.zip -d ${{ github.workspace }}/plugin/android/libs
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}

      # 3. Setup Java
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # 4. Cache Flutter
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: $FLUTTER_PATH
          key: ${{ runner.os }}-flutter

      # 5. Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'beta'

      # 6. Fetch Packages and Generate Env Variables
      - name: Fetch Packages and Generate Env
        run: |
            echo "--------------------"
            echo "Fetching packages..."
            echo "--------------------"
            pub global activate cider
            flutter pub get
            echo "------------------"
            echo "Setting Version..."
            echo "------------------"
            cider version ${{ github.event.client_payload.version }}
            echo "---------------------------"
            echo "Generating Env Variables..."
            echo "---------------------------"
            cd ${{ github.workspace }} && touch .env
            echo IP_KEY=${{ secrets.IP_KEY }} >> .env
            echo RAPID_KEY=${{ secrets.RAPID_KEY }} >> .env
            echo HS_KEY=${{ secrets.HS_KEY }} >> .env
            echo HS_SECRET=${{ secrets.HS_SECRET }} >> .env
            echo HUB_KEY=${{ secrets.HUB_KEY }} >> .env
            echo HUB_SECRET=${{ secrets.HUB_SECRET }} >> .env
            echo INTERCOM_APP_ID=${{ secrets.INTERCOM_APP_ID }} >> .env
            echo INTERCOM_IOS_KEY=${{ secrets.INTERCOM_IOS_KEY }} >> .env
            echo INTERCOM_ANDROID_KEY=${{ secrets.INTERCOM_ANDROID_KEY }} >> .env
            cat .env
            flutter pub run environment_config:generate --ip_key=${{ secrets.IP_KEY }} --rapid_key=${{ secrets.RAPID_KEY }} --hs_key=${{ secrets.HS_KEY }}  --hs_secret=${{ secrets.HS_SECRET }} --hub_key=${{ secrets.HUB_KEY }} --hub_secret=${{ secrets.HUB_SECRET }} --icom_appID=${{ secrets.ICOM_APPID }} --icom_iosKey=${{ secrets.ICOM_IOSKEY }} --icom_androidKey=${{ secrets.ICOM_ANDROIDKEY }}

      # 7. Build Android App
      - name: Configure Keystore
        run: |
          echo "-----------------------------------"
          echo "Configuring Keystore for Android..."
          echo "-----------------------------------"
          echo "$ANDROID_KEYSTORE" | base64 --decode > app/upload-keystore.jks
          echo "$ANDROID_PLAYSTORE_CONFIG" >> play_store_config.json
        env:
          ANDROID_PLAYSTORE_CONFIG: ${{ secrets.ANDROID_PLAYSTORE_CONFIG }}
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
        working-directory: android

      # 9. Cache Build
      - name: Cache Android Build
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/build
          key: ${{ runner.os }}-android-build

      # 8. Build Android App
      - name: Build Android AAB
        run: flutter build appbundle --release
        timeout-minutes: 45
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

      # 10. Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
          bundler-cache: true
          working-directory: ios

      # 11. Send Fastlane
      - name: Fastlane Action
        uses: maierj/fastlane-action@v2.0.1
        timeout-minutes: 30
        with:
          lane: internal
          subdirectory: android
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

  # iOS Flutter Build
  deploy-ios:
    runs-on: macos-latest
    env:
        FLUTTER_PATH: /Users/runner/hostedtoolcache/flutter
    steps:
      # 1. Checkout
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.PAT_GITHUB_TOKEN }}

      - name: Select Xcode version
        run: sudo xcode-select -s '/Applications/Xcode_12.5.1.app/Contents/Developer'

      # 2. Install Latest iOS Binary
      - name: Install Latest iOS Binary
        run: |
          echo "Installing latest iOS binary..."
          gh release download --repo 'sonr-io/core' --pattern *_ios.zip --dir ${{ github.workspace }}/plugin/ios/Frameworks
          unzip ${{ github.workspace }}/plugin/ios/Frameworks/*_ios.zip -d ${{ github.workspace }}/plugin/ios/Frameworks
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}

      # 3. Setup Java
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # 4. Cache Flutter
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: $FLUTTER_PATH
          key: ${{ runner.os }}-flutter

      # 5. Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'beta'

      # 7. Fetch Packages and Generate Env Variables
      - name: Fetch Packages and Generate Env
        run: |
            echo "------------------"
            echo "Setting Version..."
            echo "------------------"
            pub global activate cider
            cider version ${{ github.event.client_payload.version }}
            echo "Fetching packages..."
            flutter pub get
            cd ./ios && pod install
            echo "---------------------------"
            echo "Generating Env Variables..."
            echo "---------------------------"
            cd ${{ github.workspace }} && touch .env
            echo IP_KEY=${{ secrets.IP_KEY }} >> .env
            echo RAPID_KEY=${{ secrets.RAPID_KEY }} >> .env
            echo HS_KEY=${{ secrets.HS_KEY }} >> .env
            echo HS_SECRET=${{ secrets.HS_SECRET }} >> .env
            echo HUB_KEY=${{ secrets.HUB_KEY }} >> .env
            echo HUB_SECRET=${{ secrets.HUB_SECRET }} >> .env
            echo INTERCOM_APP_ID=${{ secrets.INTERCOM_APP_ID }} >> .env
            echo INTERCOM_IOS_KEY=${{ secrets.INTERCOM_IOS_KEY }} >> .env
            echo INTERCOM_ANDROID_KEY=${{ secrets.INTERCOM_ANDROID_KEY }} >> .env
            cat .env

      # 8. Cache Build
      - name: Cache iOS Build
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/build
          key: ${{ runner.os }}-ios-build

      # 9. Build iOS APP
      - name: Build iOS APP
        run: flutter build ios --release --no-codesign
        timeout-minutes: 45

      # 10. Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
          bundler-cache: true
          working-directory: ios

      # 11. Install SSH Key
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.FASTLANE_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      # 12. Send Fastlane
      - name: Fastlane Action
        uses: maierj/fastlane-action@v2.0.1
        timeout-minutes: 30
        with:
          lane: beta
          subdirectory: 'ios'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
